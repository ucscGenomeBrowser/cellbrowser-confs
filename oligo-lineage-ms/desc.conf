title = "Disease-specific oligodendrocyte lineage cells arise in multiple sclerosis"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From <a href="https://www.nature.com/articles/s41591-018-0236-y"
target="_blank">Mendanha Falcão et al</a>:
<p>
Multiple sclerosis (MS) is characterized by an immune system attack targeting
myelin, which is produced by oligodendrocytes (OLs). We performed single-cell
transcriptomic analysis of OL lineage cells from the spinal cord of mice
induced with experimental autoimmune encephalomyelitis (EAE), which mimics
several aspects of MS. We found unique OLs and OL precursor cells (OPCs) in EAE
and uncovered several genes specifically alternatively spliced in these cells.
Surprisingly, EAE-specific OL lineage populations expressed genes involved in
antigen processing and presentation via major histocompatibility complex class
I and II (MHC-I and -II), and in immunoprotection, suggesting alternative
functions of these cells in a disease context. Importantly, we found that
disease-specific oligodendroglia are also present in human MS brains and that a
substantial number of genes known to be susceptibility genes for MS, so far
mainly associated with immune cells, are expressed in the OL lineage cells.
Finally, we demonstrate that OPCs can phagocytose and that MHC-II-expressing
OPCs can activate memory and effector CD4-positive T cells. Our results suggest
that OLs and OPCs are not passive targets but instead active immunomodulators
in MS. The disease-specific OL lineage cells, for which we identify several
biomarkers, may represent novel direct targets for immunomodulatory therapeutic
approaches in MS.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Clustering analysis using GeneFocus pipeline</section>
<section>Quality control</section>
<p>
Cells were clustered using a custom-made approach, which we developed and refer
to as GeneFocus. We generated an iterative level 1 and level 2 clustering
pipeline, taking advantage of diffusion mapping and spatial autocorrelation
metrics to define relevant genes and cell clusters. First, cells were analyzed
and quality control (QC) filtering was applied using the scater 1.6.0 in R. We
applied cut-offs for the expression level 200,000 total FPKM and number of
genes expressed 2,500, resulting in 2,304 and 1,777 cells pre- and post-QC,
respectively. Median FPKM values were 395,721, and median gene counts were
3,694 genes.

<section>Spatial gene filtering</section>
<p>
Cells were normalized (see supplementary code in Github) and feature selection
was performed using a support vector model from the e1071 R package
(https://CRAN.R-project.org/package=e1071). The resulting expression matrix was
then input into a custom pipeline performing iterative gene filtering in the
following manner. We converted the expression matrix into a transition matrix
using destiny 2.6.1 in R35 with the input being the first 30 principal
components of the expression matrix. Subsequently, a distance matrix was
created from the transition matrix, after which the Morans I autocorrelation
metric was computed for each gene using the spdep 0.6-15 R package36. Genes
were filtered according to the mean Morans I computed for all the genes in the
expression matrix, and this mean Morans I was set as a general threshold for
subsequent gene filtering. After this initial filtering, a new diffusion map
was computed and we iteratively repeated this process until all genes within
the gene set remained above the determined threshold of spatial correlation set
during the first round of gene filtering. A similar approach was performed
using the transition matrix as a distance metric. A cut-off value was
calculated using a support vector model that predicts a mean distance as a
function of the population size in which the gene is expressed and the mean
distance observed. We iterated the distance matrix until we obtained a gene set
equal or smaller than the covered gene set obtained from the Morans I metric. A
joint diffusion map was then created.

<section>Level 1 clustering</section>
<p>
Level 1 clustering was established by estimating the ideal number of clusters
by silhouette width using the principal components of the transition matrix,
from which the number was estimated on the basis of an elbow plot. We estimated
clusters using the factoextra 1.0.5 package
(https://CRAN.R-project.org/package=factoextra) and hierarchical clustering
using Ward’s metric. We determined 5 initial clusters representing OPCs and
early OLs, MOLs, VLMCs and pericytes, and microglial cells.

<section>Level 2 clustering</section>
<p>
To determine more specific clustering and relevant genes we performed the
iterative gene filtering on each of the subclusters. The threshold for the
Morans I metric was established to be the mean Morans I of the gene set
resulting from the second gene filtering round. This resulted in a final gene
set for each subcluster varying between 800 and 1,000 spatially correlated
genes per level 1 subcluster. Clusters were estimated by silhouette width and
the final clustering was evaluated using the resulting heat map of the filtered
genes.
<p>
For validation of the GeneFocus pipeline, we extracted the expression
information from GEO from ref. 37 and were able to identify the
disease-associated microglia cluster previously described37 (Supplementary Fig.
2). To achieve our final clustering result, we also removed cells that were in
clusters with less than 3 cells, resulting in a total of 1,765 cells. These
cells seemed to be doublets based on mixed expression profiles.
"""

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv = "https://www.biorxiv.org/content/123/123.full Strangelove et al."
# URL to paper fulltext
paper_url = "https://www.nature.com/articles/s41591-018-0236-y Mendanha Falcão et al. 2018. Nat Med."
# URL to some other dataset related website, e.g. the hosting lab's own viewer
#other_url= "http://university.edu/lab/dataset Our Lab Website"
# DOI
#doi="xxx"
#

# PMID of publication
pmid = "30420755"
# GEO Series accession, usually starts with GSE
geo_series = "GSE113973"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
sra_study = "SRP144462"
# NBCI Bioproject acccession
bioproject = "PRJNA454713"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"
#
submitter = "Bastien Hervé"
version = 1
submission_date = "2020-10-20"
lab = "Gonçalo Castelo-Branco"
institute = "Karolinska Institutet"
#body_part = "brain"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
supplFiles = [
 { "file" : "NatMed2018/Annotation.rds", "label" : "Metadata RDS"},
 { "file" : "NatMed2018/expressionfile.rds", "label" : "Expression Matrix RDS"},
 { "file" : "NatMed2018/tSNEcoordinates.rds", "label" : "tSNE Coords RDS"},
]
