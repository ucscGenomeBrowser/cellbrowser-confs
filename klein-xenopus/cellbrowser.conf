# --------- REQUIRED SETTINGS --------------
body_parts=["early develop."]

# example config file with all possible settings
# For a minimal file, see minimal.conf

# internal short name, only visible in the URL
# same as the output directory name
# no special chars, no whitespace, please
name = "klein-xenopus"

# priority determines the order of the datasets
# smallest comes first
priority = 10

# tags are shown in the dataset browser
# current tags:
# smartseq2,10x
tags = ["dropseq"]

# human-readable name of this dataset
shortLabel="Klein-lab Xenopus"

# name of the expression matrix file, genes are rows
#exprMatrix="exprMatrix.tsv.gz"
exprMatrix="exprMatrix.fix.tsv.gz"

# "gencode-human", "gencode-mouse" or "symbol"
# For "symbol" you can specify which database to use to check
# symbols or, for cbHub, how to map them to the genome.
# 'auto' will automatically detect Ensembl human/mouse  IDs
# and translate to symbols
geneIdType="auto"

# name of the meta data table ("samplesheet). One sample per row. First row is name of sample.
meta="meta2.tsv"

# we try to auto-detect the field type of fields in the meta data.
# Sometimes, this doesn't work, e.g. when your cluster ID is a numer
# or your C1 chip ID is a number, but you don't want them binned, you want
# to treat as if they were categories
enumFields = ["c1_cell_id"]

# tsv files with coordinates of every sample in format <sampleId, x, y>
# first the name of the file, then a human readable description
coords=[
    {"file":"spring_coords.tsv", "shortLabel":"SPRING coordinates"},
    {"file":"scanpy-clusterLabel//tsne_coords.tsv", "shortLabel":"ScanPy t-SNE"},
    {"file":"scanpy-clusterLabel/umap_coords.tsv", "shortLabel":"ScanPy UMAP"},
    {"file":"scanpy-clusterLabel/drl_coords.tsv", "shortLabel":"ScanPy DRL"},
    # you can force coloring of some other meta data field when a layout is changed to another one
]

# --------- OPTIONAL SETTINGS --------------

# default field in the meta data table with the name of the cluster
#clusterField="Cluster Label"
defColorField = "Louvain cluster"

# default field in the meta data table used for the label of the clusters shown by default
#labelField="Cluster Label"
labelField="Louvain cluster"

# tsv files with marker gene lists for the clusters 
# format is (clusterName, geneSymbol, pValue, enrichment) + any additional fields or URLs you want to show
markers=[
    {"file":"scanpy-clusterLabel/markers_annot.tsv", "shortLabel":"Cluster-specific markers"}
]

# optional: table with <name><color> for any meta data values
# color is a six-digit hexcode
# name is a any value in the meta data table, e.g. cluster name. Canb be a .tsv or .csv file.
colors="colors.tsv"

# should the cluster labels be shown by default (default: true)
showLabels=True

# the radius of the circles. If not specified, reasonable defaults will be used
#radius = 5
# the alpha/transparency of the circles. If not specified, reasonable defaults will be used.
#alpha = 0.3

# you need short names for your clusters, as there is little space on the plot
# but cell types have complicated and long names
# So you can provide a table with two columns: 1) short cluster name 2) long version
# e.g. EC, endothelial cells
# can be a .tsv or .csv file
acroFname = "acronyms.tsv"

# genes that are highlighted in your paper can be pre-loaded and are shown as a clickable table on the left
#quickGenesFile = "quickGenes.tsv"

# the unit of the values in the expression matrix
# any string, shown on genome browser and violin y-Axis
# typical values are: "read count/UMI", "log of read count/UMI", "TPM", "log of TPM", "CPM", "FPKM", "RPKM"
unit = "reads"   
