title = "Mapping the Mouse Cell Atlas by Microwell-Seq"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From <a href="https://www.sciencedirect.com/science/article/pii/S0092867418301168"
target="_blank">Han et al</a>:
<p>
Single-cell RNA sequencing (scRNA-seq) technologies are poised to reshape the
current cell-type classification system. However, a transcriptome-based
single-cell atlas has not been achieved for complex mammalian systems. Here, we
developed Microwell-seq, a high-throughput and low-cost scRNA-seq platform
using simple, inexpensive devices. Using Microwell-seq, we analyzed more than
400,000 single cells covering all of the major mouse organs and constructed a
basic scheme for a mouse cell atlas (MCA). We reveal a single-cell hierarchy
for many tissues that have not been well characterized previously. We built a
web-based &quot;single-cell MCA analysis&quot; pipeline that accurately defines cell
types based on single-cell digital expression. Our study demonstrates the wide
applicability of the Microwell-seq technology and MCA resource.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Processing of the Microwell-seq Data</section>
<p>
The drop-seq core computational tool was used for preprocessing of the
Microwell-seq data. The implementation is described in the Drop-seq
computational cookbook
(http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf).
We first filtered out reads without two linkers or poly T sequences using the
bbduk2 function in bbmap. A cellular barcode and unique molecular identifier
(UMI) were then extracted from Read One. We discarded the paired reads if the
quality of any base in the barcode was below 10. We used STAR (version 2.5.2a)
with default parameters for mapping (Dobin et al., 2013). Reads from 3T3 cells
and 293T cells were aligned to a merged hg19-mm10 genome reference (provided by
Drop-seq group, GSE63269). Reads from MCA data were aligned to the
Mus_musculus.GRCm38.88 genome. All multi-aligned reads were removed and GTF
annotation files from Gencode were used to tag aligned reads. For UMI count,
molecular barcodes with one edit distance were merged to one within a gene. For
cell quality control, we excluded cells in which less than 500 transcripts were
expressed. A high proportion (&gt; 10%) of transcript counts derived from
mitochondria-encoded genes may indicate low cell quality, and we removed these
unqualified cells from the downstream analysis. After obtaining the digital
gene expression (DGE) data matrix, we used Seurat for dimension reduction,
clustering and differential gene expression analysis (Satija et al., 2015).

<section>Cell cycle analysis of 293T Cells</section>
<p>
We carried out cell cycle analysis of single cell using the method according to
dropseq (Macosko et al., 2015). Gene sets reflecting five phases of the HeLa
cell cycle (G1/S, S, G2/M, M and M/G1) were referred from Whitfield et al.
(2002). To find the genes that fit our 293T data, we calculated the correlation
between the expression level of each gene and the average expression level of
all genes in that phase-specific gene set. We excluded genes with a low
correlation (R &lt; 0.3). We first calculated the mean of all gene expression
values in each gene set and used the mean value as the score for that phase.
Then, the phase-specific scores were normalized twice. First, each phase scores
were centered and divided by their standard deviation. Second, we normalized
the phase score across all the phases within each cell by centering and
normalizing. The cells were assigned to a cell phase by their maximal phase
scores. The cells were first reordered by cell phase (G1/S, S, G2/M, M and
M/G1) and then by the descending phase score.

<section>Batch removal for cross tissue comparison</section>
<p>
For cross tissue comparison in Figures 2B, 6B, and 6D, we removed the batch
gene background to improve presentation. We assume that for each batch of
experiment, the cell barcodes with less than 500UMI correspond to the empty
beads exposed free RNA during the cell lysis, RNA capture and washing steps.
The batch gene background value is defined as the average gene detection for
all cellular barcodes with less than 500 UMI, multiplied by a coefficient of 2,
and then rounded to the nearest integer. Genes detected in less 25% of all
cells are removed from the batch gene background list. We subtract the batch
gene background for each cell from the digital expression matrix before making
the cross tissue comparison figures.

<section>Cell type analysis</section>
<p>
After selection of the significant differential genes (ave_diff > 1) from each
cell type, we compared our subtypes with other published paper using top
differentially expressed markers. The results of cell type analysis were
displayed with circlize in R (Gu et al., 2014). Each connective line represents
the same marker genes across different cell subtypes identified by different
methods. Data source: Figure S4A: Kidney from MCA and Park et al. (2017),
Figure S4B: Fetal lung and Adult lung both from MCA, Figure S4C: Placenta from
MCA and Nelson et al. (2016), Figure S4E: Bran from MCA and Zeisel et al.
(2015).
"""

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv = "https://www.biorxiv.org/content/123/123.full Strangelove et al."
# URL to paper fulltext
paper_url = "https://www.sciencedirect.com/science/article/pii/S0092867418301168 Han et al. 2018. Cell."
# URL to some other dataset related website, e.g. the hosting lab's own viewer
other_url= "http://bis.zju.edu.cn/MCA/ Mouse Cell Atlas Website"
# DOI
#doi="xxx"
#

# PMID of publication
pmid = "29474909"
# GEO Series accession, usually starts with GSE
geo_series = "GSE108097"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
sra_study = "SRP126776"
# NBCI Bioproject acccession
bioproject = "PRJNA422441"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"

#submitter = "John Doe"
#version = 1
#submission_date = "2019-04-22"
lab = "Guoji Guo"
institution= "Department  Center for Stem Cell and Regenerative Medicine, Zhejiang University School of Medicine"
#body_part = "brain"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
algParams = {'doTrimCells': True, 'minGenes': 200, 'doTrimGenes': True, 'minCells': 3, 'doFilterMito': True, 'mitoMax': 0.05, 'geneIdType': 'auto', 'doFilterGenes': True, 'filterMaxGenes': 15000, 'filterMinGenes': 10, 'doNormalize': True, 'countsPerCell': 10000, 'doTrimVarGenes': True, 'varMinMean': 0.0125, 'varMaxMean': 3, 'varMinDisp': 0.5, 'useRaw': True, 'doRegress': False, 'pcCount': 'auto', 'louvainNeighbors': 15, 'louvainRes': 1.0, 'doLayouts': ['umap'], 'doMarkers': True, 'markerCount': 50, 'inDir': '', 'doExp': False, 'doLog': True, 'regressMax': 10, 'doLouvain': True, 'inMeta': 'MCA1.1_cell_info.csv', 'inCluster': 'celltype', 'mitosFound': False, 'ScanpyVersion': '1.6.0'}
