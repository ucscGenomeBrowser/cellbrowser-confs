title = "Construction of a human cell landscape at single-cell level"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From <a href="https://www.nature.com/articles/s41586-020-2157-4"
target="_blank"> Han et al</a>:
<p>
Single-cell analysis is a valuable tool for dissecting cellular heterogeneity
in complex systems. However, a comprehensive single-cell atlas has not been
achieved for humans. Here we use single-cell mRNA sequencing to determine the
cell-type composition of all major human organs and construct a scheme for the
human cell landscape (HCL). We have uncovered a single-cell hierarchy for many
tissues that have not been well characterized. We established a ‘single-cell
HCL analysis’ pipeline that helps to define human cell identity. Finally, we
performed a single-cell comparative analysis of landscapes from human and mouse
to identify conserved genetic networks. We found that stem and progenitor cells
exhibit strong transcriptomic stochasticity, whereas differentiated cells are
more distinct. Our results provide a useful resource for the study of human
biology.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Clustering of single-cell data matrix</section>
<p>
Seurat was used to perform clustering analysis of single-cell data from
different tissues. DGE data were used as inputs. Cells from the pre-processed
data and genes expressed in more than three cells were selected for further
analysis. Filtered data were ln(CPM/100 + 1) transformed, and the number of UMI
and the percentage of mitochondrial gene content were regressed out according
to the published method. About 2,000 genes with an average expression of more
than 0.01 and a dispersion greater than 0.5 were used as inputs for initial
principal component analysis (PCA) and the number of principal components (PCs)
used for nonlinear dimensional reduction (t-SNE) analysis was chosen according
to the PCElbowPlot function and JackStrawPlot function. For clustering, we set
different resolution parameters between 0.6 and 4 in FindAllCluster function
and narrowed down to certain cluster numbers by distinguishing differential
genes among clusters. The heat map produced by DoHeatmap function is one basis
for judging the quality of clustering. These parameters, including the
resolution and number of PCs, were adjusted on per-tissue basis. The default
Wilcoxon rank-sum test was used by running FindAllMarkers function in Seurat to
find differentially expressed markers in each cluster. Finally, we annotate
each cell type by extensive literature reading and searching for the specific
gene expression pattern.

<section>Batch removal for cross-tissue comparison</section>
<p>
To improve the presentation, we strictly removed the batch gene background for
cross-tissue comparison. We assumed that, for each batch of experiments, cell
barcodes with fewer than 300 UMIs correspond to empty beads exposed to free RNA
during cell lysis, RNA capture and washing steps. Genes with extensive
expression in all beads were considered batch genes. The batch gene background
value was defined as the average gene detection for all cellular barcodes with
fewer than 300 UMIs multiplied by the median of the fold difference between the
detected gene expression of a cell and the average detected gene expression for
beads with fewer than 300 UMIs; this value was then rounded to the nearest
integer. We subtracted the batch gene background for each cell from the digital
expression matrix before performing the cross-tissue comparison. We used the
background-removed matrix to perform cross-tissue analyses such as the
cross-tissue comparison of endothelial cells and stromal cells over the whole
body.

<section>Landscape construction</section>
<p>
For clustering of the complete human tissue data set in Fig. 1, we excluded
data from differentiated cell cultures and G-CSF-mobilized PB to ensure natural
status of the cell landscape. A total of 599,926 cells were selected and
processed using Scanpy in python environment. Background-removed DGE data
with cells analysed in each tissue and genes expressed in at least 20 cells
were used as inputs for Scanpy. Then, DGE data were ln(CPM/100 + 1)
transformed. We selected about 3,000 highly variable genes according to their
average expression and dispersion. We then regressed out UMI and gene numbers
and scaled each gene to unit variance with clip values exceeding a standard
deviation of 10. We chose 50 PCs for PCA and computed the neighbourhood graph
of cells. We then used the Louvain clustering to cluster cells with resolution
of 3.5 and k = 15. Finally, 102 clusters for the human landscape were produced
and marker genes were calculated by the Wilcoxon rank-sum test. For
sub-clustering of 102 clusters, we used the Seurat pipeline described
previously with the default resolution of 0.8 to process cells from each
cluster and predicted a total of 843 sub-clusters. The dendrogram in Fig. 1d
was drawn using Pearson correlation coefficient (PCC) with mean gene expression
for each cluster (CPM/100 values of all genes) with the R package denextend.

<section>UCSC scanpy results</section>
<p>
UMAP plot was generated using the Cell Browser tool <code>cbScanpy</code> which
runs a basic scanpy pipeline. The tool was run with the default options for
scanpy. Parameters for this are shown below.
"""

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv = "https://www.biorxiv.org/content/123/123.full Strangelove et al."
# URL to paper fulltext
paper_url = "https://www.nature.com/articles/s41586-020-2157-4 Han et al. 2020. Nature."
# URL to some other dataset related website, e.g. the hosting lab's own viewer
other_url= "http://bis.zju.edu.cn/HCL/ Human Cell Landscape"
# DOI
#doi="xxx"
#

# PMID of publication
pmid = "32214235"
# GEO Series accession, usually starts with GSE
# geo_series = "GSE25097"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
sra_study = ["SRP214806","SRP217103"]
# NBCI Bioproject acccession
bioproject = "PRJNA554845"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"

#submitter = "John Doe"
#version = 1
#submission_date = "2019-04-22"
#lab = "Mike Bigboss"
#institution= "RichUniversity"
#body_part = "brain"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
algParams = [('doTrimCells', True), ('minGenes', 200), ('doTrimGenes', True), ('minCells', 3), ('doFilterMito', True), ('mitoMax', 0.05), ('geneIdType', 'auto'), ('doFilterGenes', True), ('filterMaxGenes', 15000), ('filterMinGenes', 10), ('doNormalize', True), ('countsPerCell', 10000), ('doLog', True), ('doTrimVarGenes', True), ('varMinMean', 0.0125), ('varMaxMean', 3), ('varMinDisp', 0.5), ('useRaw', True), ('doRegress', False), ('pcCount', 'auto'), ('louvainNeighbors', 15), ('louvainRes', 1.0), ('doLayouts', ['umap']), ('doMarkers', True), ('markerCount', 50), ('inDir', ''), ('doExp', False), ('regressMax', 10), ('doLouvain', True), ('inMeta', 'meta.tsv'), ('inCluster', 'cell_type'), ('mitosFound', False), ('ScanpyVersion', '1.6.0')]
