title = "A single-cell and spatial atlas of autopsy tissues reveals pathology and cellular targets of SARS-CoV-2"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

#image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From <a href=""
target="_blank">Delorey et al.</a>:
<p>
The SARS-CoV-2 pandemic has caused over 1 million deaths globally, mostly due
to acute lung injury and acute respiratory distress syndrome, or direct
complications resulting in multiple-organ failures. Little is known about the
host tissue immune and cellular responses associated with COVID-19 infection,
symptoms, and lethality. To address this, we collected tissues from 11 organs
during the clinical autopsy of 17 individuals who succumbed to COVID-19,
resulting in a tissue bank of approximately 420 specimens. We generated
comprehensive cellular maps capturing COVID-19 biology related to patients’
demise through single-cell and single-nucleus RNA-Seq of lung, kidney, liver
and heart tissues, and further contextualized our findings through spatial RNA
profiling of distinct lung regions. We developed a computational framework that
incorporates removal of ambient RNA and automated cell type annotation to
facilitate comparison with other healthy and diseased tissue atlases. In the
lung, we uncovered significantly altered transcriptional programs within the
epithelial, immune, and stromal compartments and cell intrinsic changes in
multiple cell types relative to lung tissue from healthy controls. We observed
evidence of: alveolar type 2 (AT2) differentiation replacing depleted alveolar
type 1 (AT1) lung epithelial cells, as previously seen in fibrosis; a
concomitant increase in myofibroblasts reflective of defective tissue repair;
and, putative TP63+ intrapulmonary basal-like progenitor (IPBLP) cells, similar
to cells identified in H1N1 influenza, that may serve as an emergency cellular
reserve for severely damaged alveoli. Together, these findings suggest the
activation and failure of multiple avenues for regeneration of the epithelium
in these terminal lungs. SARS-CoV-2 RNA reads were enriched in lung mononuclear
phagocytic cells and endothelial cells, and these cells expressed distinct host
response transcriptional programs. We corroborated the compositional and
transcriptional changes in lung tissue through spatial analysis of RNA profiles
in situ and distinguished unique tissue host responses between regions with and
without viral RNA, and in COVID-19 donor tissues relative to healthy lung.
Finally, we analyzed genetic regions implicated in COVID-19 GWAS with
transcriptomic data to implicate specific cell types and genes associated with
disease severity. Overall, our COVID-19 cell atlas is a foundational dataset to
better understand the biological impact of SARS-CoV-2 infection across the
human body and empowers the identification of new therapeutic interventions and
prevention strategies.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Single-cell and single-nucleus RNA library preparation and sequencing</section>
<p>
For each sample, 8,000-15,000 cells or nuclei were loaded in one channel of a
Chromium Chip (10x genomics). 3’ v3 chemistry was used to profile lung nuclei.
5’v1.1 chemistry was used to profile freshly dissociated lung cells, as well as
cells obtained from cryopreserved lung tissue. 3’ v3.1 chemistry was used to
process all other tissues. cDNA and gene expression libraries were generated
according to the manufacturer’s instructions (10x Genomics). cDNA and gene
expression library fragment sizes were assessed with a DNA High Sensitivity
Bioanalyzer Chip (Agilent). cDNA and gene expression libraries were quantified
using the Qubit dsDNA High Sensitivity assay kit (ThermoFisher Scientific).
Gene expression libraries were multiplexed and sequenced on the Nextseq 500
(Illumina) with a 150 cycle kit and the following read structure: Read 1: 28
cycles, Read 2: 96 cycles, Index Read 1: 8 cycles, or on the Novaseq (S2 flow
cell; Illumina) with a 100 cycle kit and the following read structure: Read 1:
28 cycles, Read 2: 91 cycles, Index Read 1: 8 cycles.

<section>Sc/snRNA-Seq expression matrices</section>
<p>
Cell Ranger mkfastq (10x Genomics) was used to demultiplex the raw sequencing
reads, and Cell Ranger count on Terra using the cellranger_workflow in
Cumulus33 was used to align sequencing reads and generate a counts matrix.
Reads were aligned to a custom-built Human GRCh38 and SARS-CoV-2 RNA reference.
ScRNA-Seq reads were aligned to “GRCh38_and_SARSCoV2”, and snRNA-Seq reads were
aligned to “GRCh38_premrna_and_SARSCoV2’’. The GRCh38 pre-mRNA reference
captures reads mapping to both exons or introns, and was built as previously
described66. The SARS-CoV-2 viral sequence (FASTA file) and accompanying gene
annotation and structure (GTF file) are as previously described73. The GTF file
was edited to include only CDS regions, with added regions for the 5’ UTR
(“SARSCoV2_5prime”), 3’ UTR (“SARSCoV2_3prime”), and anywhere within the
Negative Strand (“SARSCoV2_NegStrand”) of SARS-CoV-2. Trailing A’s at the 3’
end of the virus were excluded from the SARSCoV2 fasta file, as we found these
to drive spurious viral alignment in pre-COVID-19 samples.

<section>Ambient RNA removal from expression matrices</section>
<p>
CellBender remove-background32 was run (on Terra) to remove ambient RNA and
other technical artifacts from the count matrices. The workflow is available
publicly as cellbender/remove-background (snapshot 11) and documented on the
CellBender github repository as v0.2.0:
https://github.com/broadinstitute/CellBender.

<p>
This latest version of CellBender remove-background cleans up count matrices
using a principled model of noise generation in scRNA-Seq. The parameters
“expected-cells” and “total-droplets-included” were chosen for each dataset
based on the total UMI per cell vs. cell barcode curve in accordance with
CellBender documentation. Other inputs were left at their default values. The
false positive rate parameter “fpr” was set to 0.01, 0.05, and 0.1. For
downstream analyses we used the ‘FPR_0.01_filtered.h5’ file.

<section>Quality control</section>
<p>
Following CellBender, individual samples were processed using Cumulus,
including filtering out cells/nuclei with fewer than 400 UMI, 200 genes, or
greater than 20% of UMIs mapped to mitochondrial genes.

<section>Sc/snRNA-Seq sample integration</section>
<p>
Sc/sn RNA-Seq data from individual samples were combined into a single
expression matrix and analyzed using Scanpy74 with identical pre-processing
steps — aggregation, PCA, and batch correction using Harmony-Pytorch34. First,
transcript counts were clipped and then normalized. UMI counts were clipped at
13, the value of the 99th percentile of non-zero counts. Clipped count data
were then normalized so that UMI counts per cell/nucleus summed to 10,000 and
then logged, resulting in log(1+10,000*UMIs / total UMIs) for each cell/nuclei,
“logtp10k”.

<p>
Next, highly variable genes were identified by Scanpy’s highly_variable_genes
function applied separately to data from each profiling modality: cryopreserved
(cells), fresh tissue (cells), and fresh-frozen (nuclei), and retained genes
that were highly variable across two or more methods. Next, data dimensionality
was reduced to 75 top principal components by PCA, followed by Harmony34, 75
for batch correction, where each sample was considered a separate batch.
Neighbors were computed using the Harmony corrected PCA coefficients and UMAP
and Leiden clusters (below) were computed using the resulting nearest
neighbors’ graph.

<section>Clustering</section>
Leiden clustering was performed on a k-nearest neighbor graph (k=100) with two
different resolutions: 1.3 and 2. Resolution 1.3 was sufficient for coarse
annotations of clusters. Clustering was performed using Pegasus33 with default
parameters (except the resolution as mentioned above).

<section>Annotation by manual curation of heart, kidney, and liver</section>
<p>
For heart, liver and kidney, we used standard approaches of graph-based
clustering on the integrated datasets (Seurat v3 for kidney and liver; Scanpy
for heart) to first derive high-level groupings followed by differential gene
expression to determine cluster enriched genes. For kidney and liver, we
defined the endothelial and immune compartments as predominantly PECAM1+/CD31+
and PTPRC+/CD45+ clusters respectively from the high-level assignment, and
subjected them to iterative clustering, differential expression and post-hoc
annotation to determine granular subsets. Similar iterative clustering was
performed for the high-level mesenchymal groups in both tissues, proximal
tubular compartment in the kidney and hepatocyte compartment in the liver. For
heart, Leiden clustering at a resolution of 1.5 yielded clusters whose marker
genes were compared to the heart atlas from Tucker et al.88. Where applicable,
technical or putatively low-quality clusters are indicated as such to allow for
permissive downstream analysis by the interested reader.
"""

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv_url = "https://www.biorxiv.org/content/10.1101/2021.02.25.430130v1.full Delorey et al. 2021. bioRxiv."
# URL to paper fulltext
paper_url = ["https://www.biorxiv.org/content/10.1101/2021.02.25.430130v1.full Delorey et al. 2021. bioRxiv.","https://www.nature.com/articles/s41586-021-03569-1 Melms et al. 2021. Nature."]
# URL to some other dataset related website, e.g. the hosting lab's own viewer
#other_url= "http://university.edu/lab/dataset Our Lab Website"
# DOI
#doi="xxx"
#

# PMID of publication
# pmid = "12343234 Strangelove et al"
# GEO Series accession, usually starts with GSE
# geo_series = "GSE25097"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
# sra_study = "xxxx"
# NBCI Bioproject acccession
# bioproject = "xxxx"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"

#submitter = "John Doe"
#version = 1
#submission_date = "2019-04-22"
#lab = "Mike Bigboss"
#institution= "RichUniversity"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
