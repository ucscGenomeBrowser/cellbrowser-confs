title = "Molecular Architecture of the Mouse Nervous System"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

#image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From <a href="https://www.sciencedirect.com/science/article/pii/S009286741830789X"
target="_blank">Zeisel et al</a>:
<p>
The mammalian nervous system executes complex behaviors controlled by
specialized, precisely positioned, and interacting cell types. Here, we used
RNA sequencing of half a million single cells to create a detailed census of
cell types in the mouse nervous system. We mapped cell types spatially and
derived a hierarchical, data-driven taxonomy. Neurons were the most diverse and
were grouped by developmental anatomical units and by the expression of
neurotransmitters and neuropeptides. Neuronal diversity was driven by genes
encoding cell identity, synaptic connectivity, neurotransmission, and membrane
conductance. We discovered seven distinct, regionally restricted astrocyte
types that obeyed developmental boundaries and correlated with the spatial
distribution of key glutamate and glycine neurotransmitters. In contrast,
oligodendrocytes showed a loss of regional identity followed by a secondary
diversification. The resource presented here lays a solid foundation for
understanding the molecular architecture of the mammalian nervous system and
enables genetic manipulation of specific cell types.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Clustering</section>
<p>
Finally, we performed clustering on the multiscale KNN graph. We used Louvain
multilevel community clustering (Blondel et al., 2008). However,
modularity-based graph clustering suffers a well-known resolution limit
(Fortunato and Barthélemy, 2007), failing to find small clusters even when they
are perfectly unambiguously defined. Some variants (so called resolution
limit-free algorithms) can be tuned to detect smaller clusters, but at the
expense of breaking up large clusters. To circumvent this issue, we exploited
the fact that we had both a graph, and an embedding of the graph in two
dimensions. We first used Louvain clustering on the graph to find most
clusters, and then isolated and re-clustered each cluster using DBSCAN in the
low-dimensional space. We call this approach “Polished Louvain.”

<p>
In more detail, we first performed Louvain community detection on the MKNN
graph, with resolution set to 1.0 (except for level 3 where we used 0.6 for
astrocytes, 0.35 for sensory neurons and 0.6 for granule cells).

<p>
We marked cells as outliers if they (1) belonged to clusters with less than ten
cells; or (2) were marked as outliers by DBSCAN (on the 2D embedding) with 
&aring; set to the 80th percentile of the distance to the kth nearest neighbor
and min_samples = 10; or (3) if more than 80% of the cell’s nearest neighbors
belonged to a different cluster.

<p>
Next, we isolated each cluster and considered it for further splitting, in the
2D space of the gt-SNE embedding. We centered it using PCA and standardized it
by subtracting the mean and dividing by the standard deviation. We marked the
cluster for splitting if it now showed three or more outliers based on the
median absolute deviation (MAD) with threshold 3.5. We also marked the cluster
for splitting if more than 5% of the cells (or 25 cells, whichever is larger)
were located at a distance greater than the 70th percentile of the distance to
the kth nearest neighbor.

<p>
If a cluster was marked for splitting, we performed DBSCAN on that cluster with 
&aring; set to the 70th percentile of the distance to the kth nearest neighbor
and min_samples = 5% of the cells (or 25 cells, whichever is larger).

<p>
Finally, we set the cluster label of each cell to the majority label of its ten
nearest neighbors.

<p>
We stored cluster labels as column attribute Clusters in the Loom files
(integer ranging from 0 to n). At level 5 and 6, cluster names are given by the
column attribute ClusterName.
"""

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv = "https://www.biorxiv.org/content/123/123.full Strangelove et al."
# URL to paper fulltext
paper_url = "https://www.sciencedirect.com/science/article/pii/S009286741830789X Zeisel et al. 2018. Cell."
# URL to some other dataset related website, e.g. the hosting lab's own viewer
other_url= "http://mousebrain.org/ Mouse Brain Atlas from the Linnarsson Lab"
# DOI
#doi="10.1016/j.cell.2018.06.021"
#

# PMID of publication
pmid = "30096314"
# GEO Series accession, usually starts with GSE
# geo_series = "GSE25097"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
sra_study = "SRP135960"
# NBCI Bioproject acccession
# bioproject = "xxxx"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"

#submitter = "John Doe"
#version = 1
#submission_date = "2019-04-22"
#lab = "Mike Bigboss"
#institution= "RichUniversity"
#body_part = "brain"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
