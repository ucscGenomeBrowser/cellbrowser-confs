title = "Transcriptional Convergence of Oligodendrocyte Lineage Progenitors during Development"

# a thumbnail image of some nice image representing your dataset, sometimes it's figure 1, sometimes 
# the journal cover, or just a screenshot of the t-SNE plot. If the file is bigger than 400px,
# optimize the image size to something smaller that can load progressively with this Unix command:
# convert myImage.png -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB -resize 400^ thumb.jpg

image = "thumb.jpg"

# abstract of paper or dataset summary text
abstract = """
<p>
From
<a href="https://www.cell.com/developmental-cell/fulltext/S1534-5807(18)30558-6"
target="_blank">Marques et al</a>:
<p>
Pdgfra+ oligodendrocyte precursor cells (OPCs) arise in distinct specification
waves during embryogenesis in the central nervous system (CNS). It is unclear
whether there is a correlation between these waves and different
oligodendrocyte (OL) states at adult stages. Here, we present bulk and
single-cell transcriptomics resources providing insights on how transitions
between these states occur. We found that post-natal OPCs from brain and spinal
cord present similar transcriptional signatures. Moreover, post-natal OPC
progeny of E13.5 Pdgfra+ cells present electrophysiological and transcriptional
profiles similar to OPCs derived from subsequent specification waves,
indicating that Pdgfra+ pre-OPCs rewire their transcriptional network during
development. Single-cell RNA-seq and lineage tracing indicates that a subset of
E13.5 Pdgfra+ cells originates cells of the pericyte lineage. Thus, our results
indicate that embryonic Pdgfra+ cells in the CNS give rise to distinct
post-natal cell lineages, including OPCs with convergent transcriptional
profiles in different CNS regions.
"""

# methods: please describe roughly what the samples are and how you processed them computationally
methods = """
<section>Single-Cell RNA-Seq</section>
<p>
List of All the Single-Cell Experiments
<ul>
  <li>2 E13.5 Brain experiments: 2 and 4 Fluidigm chips, respectively
  <li>1 E13.5 Spinal cord experiment – 4 Fluidigm chips
  <li>1 P7 Brain experiment – 4 Fluidigm chips
  <li>2 P7 Spinal cord experiments – 1 and 4 Fluidigm chips, respectively
  <li>2 experiments with P7 /P8 brain from E13.5 derived cells – 6 Fluidigm chips
  <li>1 experiment with P7/P8 brain from P3 derived cells – 3 Fluidigm chips
  <li>1 experiment with E17.5 brain – 1 Fluidigm chip
</ul>
<p>
To prevent batch effects, in a balanced study design cells from different
timepoints and regions would be mixed in each processed single-cell run. Since
we were collecting several timepoints and regions and using the Fluidigm C1 96
well Chips, this was not possible to implement. Cells from the same area and
age were collected and processed at several time points. We did not observe
differences between the experiments that would dramatically affect the analysis
of the data, as assessed by comparison of the original dataset with our dataset
where the confounding factors were regressed out.

<section>Single-Cell Clustering</section>
<section>Quality Control</section>
<p>
Prior to clustering, cells from our dataset and the OPC, COP, and VLMC cells
from Marques. et. al (Marques et al., 2016) were selected based on a minimum
transcript threshold. Cells had to express a minimum of 1000 mRNA molecules per
cell excluding mitochondrial RNA (filtered by the string “Mt-”), and repeat RNA
(filtered by the string “r_”) in order to be considered for analysis.
Distributions of transcript counts and total gene counts were calculated and
categorized by cluster (Figure S1). Additionally 84 cells were considered
doublets due to a joint expression of either OL and neuronal genes, or a joint
expression of OPC and VLMC associated genes.
<p>
Weak single-cell data / dead cells which did not pass the quality control check
have been filtered away from the single-cell analysis.

<section>BackSPIN Clustering</section>
<p>
The post QC dataset was clustered using the BackSPIN2 algorithm as previously
described (Marques et al., 2016, Romanov et al., 2017). In short, the algorithm
is an adaptation to the sorting algorithm SPIN (Tsafrir et al., 2005) wherein a
bi-clustering is performed by sorting the cells and genes into a
one-dimensional ordering where a binary split is performed based on the
distribution of genes within each ordering. The algorithm repeatedly performs
feature selection and subsequent splits until a certain threshold is achieved.

<section>Pathway and Geneset Overdispersion Analysis (PAGODA)</section>
<p>
The post QC dataset was clustered using PAGODA (SCDE R-package) (Fan et al.,
2016). First, the drop-out rate is determined and the amplification noise is
estimated through the use of a mixture-model. Then the first principal
component is calculated for all gene sets and GO-term clusters are provided or
identified, and over-dispersion is defined as the amount of variance explained
by the gene set above expectation. Holm procedure is used as a part of the SCDE
package.

<section>Unbiased Cluster Determination PAGODA</section>
<p>
Cluster generation within PAGODA is based on hierarchical clustering of the
distance measure obtained from the first principal component of the gene sets.
We developed an algorithm to determine the final cluster amount in an unbiased
way. First, we perform a differential expression analysis using SDCE for each
new split to calculate for each cluster what genes are differentially expressed
between them, we filter genes by a requirement to be expressed in at least 60%
of the population, and then we calculate a p-value assuming a normal
distribution based on the Z-scores obtained from the differential expression
analysis. Subsequently we either discard the split or accept the split based on
the significance of the top 20 most significant genes (p<0.01). Using these
settings the algorithm returned 15 clusters from the dataset.

<section>Merging of BackSPIN2 and PAGODA Clusters</section>
<p>
BackSPIN2 sorts the expression matrix by genes and cells, then splits the cells
iteratively forming clusters with associated genes. Although bi-clustering
(both cells and genes) is an advantage, genesets that are not unique to only
one cluster can be discarded, reducing sub-clustering power. PAGODA models the
expression matrix, filtering out possible dropout genes. The residual
expression data is then assigned to pathways and genesets, which show
coordinated variability in the dataset, and used to hierarchically cluster the
data in a set number of clusters. PAGODA is robust to noise through the use of
co-varying genesets, potentially detecting variations in gene expression that
would be insignificant when measured using any one single gene. Nevertheless,
PAGODA’s Bayesian modelling is slow and the number of clusters has to be set
manually. In order to establish an unbiased end-point for cluster splitting and
avoid oversplitting in PAGODA, we implemented a custom algorithmic threshold,
which performs differential gene expression between clusters, and indicates
whether they should be merged if no statistical difference in gene expression
is detected. In general, PAGODA and BackSPIN2 gave rise to clusters with
similar transcriptional profiles. While we adopted the main BackSPIN2 clusters,
PAGODA resolved OPCs as three populations and not as one population (as in
BackSPIN2). This might be due to low expression and the possible quiescent
phenotype of some of the OPC clusters. PAGODA has the advantage of looking at
patterns of groups of genes instead of individual genes thus increasing
sensitivity for low expressing cells. Therefore we retained the three found OPC
clusters in PAGODA and the NP3 cluster from PAGODA (due to their low
expression) and merged them with the remaining BackSPIN2 clusters. The
remaining cells that were classified by backSPIN2 as OPCs but not by PAGODA,
were reassigned to the COP and NP3 clusters, given their transcriptional
profile.

<p>
BackSPIN2 clustering indicated distinct clusters within the NFOL cluster.
Enrichment analysis and marker selection revealed shared markers and enriched
genes as well as some minor differences in genes such as Mog and Mag
expression. Further analysis of these subclusters did not fall within the scope
of this paper and as such the clusters were merged into the NFOL cluster.
Furthermore, Enrichment analysis and marker selection of the NP1 cluster
revealed a clear bimodal expression profile, hence we used the BackSPIN2
clustering data to split one level deeper within the NP1 population resulting
in the NP1a and NP1b subclusters. PAGODA also revealed these when allowed to
oversplit, our splitting algorithm indicated this split to form valid clusters.
However, the NP1 cluster split was preceded by a number of non-valid splits,
meaning that this cluster is a subcluster and statistical evaluation of split
validity is less effective due to the small cluster size.
"""
#<section>Single-Cell Near-Neighbor Network Embedding (SCN3E)</section>
#<section>Feature Selection</section>
#<p>
#Initial gene selection involves a cutoff for expressed genes determined by
#expression above the mean expression of all genes, then a feature selection is
#performed using the coefficient of variation, and for each gene we select genes
#above the support vector regression fitted line.
#
#<section>Dimensional Reduction of Count Based Expression Matrix Spaces</section>
#<p>
#For dimensional reduction we use diffusion mapping, a non-linear dimensional
#reduction technique (Rpackage DPT) (Haghverdi et al., 2016) including a
#locally scaled transition matrix for improved resolution. We estimate the
#number of diffusion components using the elbow method and overcluster the data
#in 100 clusters. Diffusionpseudotimes are then calculated for each of the 100
#clusters of which the first 20 principle components are used for subsequent
#network embedding (depending on the complexity of the dataset.
#
#<section>Nearest Neighbor Network Embedding and Lineage Estimation</section>
#<p>
#The matrix of pseudotimes with origin of each previously determined cluster are
#reduced using PCA. Distances between cells are defined using Manhattan
#distances. Per individual cell, the 20 nearest neighbors are calculated (within
#certain parameters, see accompanying code) and network edges are created
#between them. Edges are then weighted based on the Pearson correlation. The
#edge weights are then raised to a power (soft-thresholding). Generating a
#network based on transition probabilities (pseudotimes) will emphasize smooth
#transitions and break up spurious connections in the graph.

# Note that all of these identifiers can also be a list of values.
# e.g. you could write 
# pmid = ["123123", "23423423"]
# All identifiers and URLS can contain a optional description after a space

# URL to pre-print
#biorxiv = "https://www.biorxiv.org/content/123/123.full Strangelove et al."
# URL to paper fulltext
paper_url = "https://www.cell.com/developmental-cell/fulltext/S1534-5807(18)30558-6 Marques et al. 2018. Dev Cell."
# URL to some other dataset related website, e.g. the hosting lab's own viewer
other_url= "https://ki.se/en/mbb/oligointernode Oligointernode"
# DOI
#doi="xxx"
#

# PMID of publication
pmid = "30078729"
# GEO Series accession, usually starts with GSE
geo_series = "GSE95194"
# dbGaP accession, usually starts with phs.
# dbgap = "phs000424.v7.p2"
# arrayexpress accession
# arrayexpress = "xxx"
# ENA project accession
# ena_project = "ENAP12341"
# SRA accession
sra_study = "SRP100521"
# NBCI Bioproject acccession
bioproject = "PRJNA376390"
# Others:
# cirm_dataset= "xxxx"
# ega_study="xxxx"
#
# supplemental files can be a raw expression matrix, Seurat or Scanpy files or anything else, like protocols
# supplFiles = [
# { "file" : "seurat3.rds", "label" : "Seurat3 RDS"},
# { "file" : "scanpy.h5ad", "label" : "Scanpy h5ad"},
# ]
# You can add a file with the original raw data, if needed. It gets copied over and added to the Downloads tab, with a note
# rawMatrixFile= "raw10XFile.mtz.zip"
# rawMatrixNote= "Original 10X output file"

submitter = "Bastien Hervé"
version = 1
submission_date = "2020-10-20"
lab = "Gonçalo Castelo-Branco"
institute = "Karolinska Institutet"
#body_part = "brain"
#
# Any other information you want to show on the dataset info page
#custom = {"sample barcode": "1231-HH11" }
#
supplFiles = [
 { "file" : "DevCell2018/annoE13P7.rds", "label" : "Metadata RDS"},
 { "file" : "DevCell2018/ematE13P7.rds", "label" : "Expression Matrix RDS"},
 { "file" : "DevCell2018/tSNEcoordinates.rds", "label" : "tSNE Coords RDS"},
]
